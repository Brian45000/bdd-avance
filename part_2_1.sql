-- SQLBook: Code
-- Suppression des tables si existantes
DROP TABLE IF EXISTS subscription_table CASCADE;

-- Cr√©ation de la table 'user_table'
CREATE TABLE subscription_table (
    subscription_id SERIAL PRIMARY KEY,
    subscribed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_id INT ,
    paid INT CHECK (paid IN (10, 100, 1000)),
    subscription_plan  VARCHAR(255) CHECK (subscription_plan IN ('Monthly', 'Yearly', 'Lifetime')),
    FOREIGN KEY (user_id) REFERENCES user_table(user_id)
);

INSERT INTO subscription_table (subscribed_at,user_id, paid, subscription_plan)
VALUES
('2023-06-26 21:58:35', 1, 10, 'Monthly'),
('2023-06-07 08:27:24', 2, 100, 'Yearly'),
('2023-06-29 09:16:44', 3, 1000, 'Lifetime'),
('2023-06-24 12:28:56', 4, 1000, 'Lifetime'),
('2023-06-17 14:51:54', 5, 1000, 'Lifetime'),
('2023-05-01 01:10:50', 6, 1000, 'Lifetime'),
('2023-06-04 13:58:13', 7, 10, 'Monthly'),
('2023-06-07 18:13:15', 8, 1000, 'Lifetime'),
('2023-04-14 19:22:13', 9, 1000, 'Lifetime'),
('2023-05-15 10:44:09', 10, 10, 'Monthly'),
('2023-06-11 16:24:27', 11, 1000, 'Lifetime'),
('2023-06-02 08:27:00', 12, 100, 'Yearly'),
('2023-06-07 17:45:17', 13, 100, 'Yearly'),
('2023-06-09 12:45:53', 14, 10, 'Monthly'),
('2023-06-28 01:36:11', 15, 100, 'Yearly'),
('2023-04-27 18:53:39', 16, 10, 'Monthly'),
('2023-06-24 15:47:21', 17, 10, 'Monthly'),
('2023-06-22 17:00:25', 18, 10, 'Monthly'),
('2023-06-17 03:26:35', 19, 10, 'Monthly'),
('2023-05-16 02:55:08', 20, 100, 'Yearly'),
('2023-06-07 10:32:53', 21, 100, 'Yearly'),
('2023-05-04 10:55:01', 22, 100, 'Yearly'),
('2023-06-22 02:58:54', 23, 100, 'Yearly'),
('2023-04-30 22:24:25', 24, 100, 'Yearly'),
('2023-05-31 14:47:35', 25, 100, 'Yearly'),
('2023-06-06 22:52:26', 26, 100, 'Yearly'),
('2023-05-03 09:30:38', 27, 1000, 'Lifetime'),
('2023-06-23 22:05:04', 28, 10, 'Monthly'),
('2023-06-10 20:34:30', 29, 10, 'Monthly'),
('2023-05-16 09:21:33', 30, 100, 'Yearly'),
('2023-06-08 07:37:58', 31, 100, 'Yearly'),
('2023-06-14 02:11:15', 32, 100, 'Yearly'),
('2023-06-08 16:48:49', 33, 10, 'Monthly'),
('2023-05-11 15:06:13', 34, 10, 'Monthly'),
('2023-06-26 00:45:09', 35, 100, 'Yearly'),
('2023-03-02 02:31:03', 36, 100, 'Yearly'),
('2023-06-08 02:53:48', 37, 1000, 'Lifetime'),
('2023-06-27 11:03:45', 38, 10, 'Monthly'),
('2023-05-01 09:51:31', 39, 1000, 'Lifetime'),
('2023-06-28 16:34:52', 40, 10, 'Monthly'),
('2023-06-13 04:39:41', 41, 100, 'Yearly'),
('2023-06-21 05:20:35', 42, 1000, 'Lifetime'),
('2023-06-20 09:59:55', 43, 100, 'Yearly'),
('2023-06-21 06:19:36', 44, 10, 'Monthly'),
('2023-06-29 11:41:25', 45, 100, 'Yearly'),
('2023-06-22 22:28:09', 46, 10, 'Monthly'),
('2023-05-20 16:49:28', 47, 1000, 'Lifetime'),
('2023-06-27 05:25:28', 48, 1000, 'Lifetime'),
('2023-06-01 15:14:35', 49, 1000, 'Lifetime'),
('2023-04-07 09:42:32', 50, 10, 'Monthly'),
('2023-05-01 19:59:57', 51, 1000, 'Lifetime'),
('2023-03-24 19:39:30', 52, 1000, 'Lifetime'),
('2023-06-29 03:53:09', 53, 100, 'Yearly'),
('2023-06-28 00:40:09', 54, 10, 'Monthly'),
('2023-06-25 16:26:16', 55, 1000, 'Lifetime'),
('2023-06-04 06:12:24', 56, 100, 'Yearly'),
('2023-03-03 01:07:22', 57, 100, 'Yearly'),
('2023-06-23 00:52:58', 58, 100, 'Yearly'),
('2023-06-22 10:33:52', 59, 1000, 'Lifetime'),
('2023-05-16 15:20:27', 60, 10, 'Monthly');